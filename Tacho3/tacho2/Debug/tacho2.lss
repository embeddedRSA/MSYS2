
tacho2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000018  00800200  00000a92  00000b26  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a92  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000022  00800218  00800218  00000b3e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000b3e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000b70  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000160  00000000  00000000  00000bb0  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000018f5  00000000  00000000  00000d10  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001001  00000000  00000000  00002605  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009da  00000000  00000000  00003606  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001fc  00000000  00000000  00003fe0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000084a  00000000  00000000  000041dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000678  00000000  00000000  00004a26  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  0000509e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	ea c0       	rjmp	.+468    	; 0x1ea <__vector_5>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	09 c1       	rjmp	.+530    	; 0x250 <__vector_15>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e2 e9       	ldi	r30, 0x92	; 146
  fc:	fa e0       	ldi	r31, 0x0A	; 10
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a8 31       	cpi	r26, 0x18	; 24
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a8 e1       	ldi	r26, 0x18	; 24
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	aa 33       	cpi	r26, 0x3A	; 58
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	02 d0       	rcall	.+4      	; 0x124 <main>
 120:	b6 c4       	rjmp	.+2412   	; 0xa8e <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:
 124:	10 92 1b 02 	sts	0x021B, r1	; 0x80021b <checkpointCnt>
 128:	60 e0       	ldi	r22, 0x00	; 0
 12a:	70 e0       	ldi	r23, 0x00	; 0
 12c:	82 e8       	ldi	r24, 0x82	; 130
 12e:	92 e4       	ldi	r25, 0x42	; 66
 130:	55 d1       	rcall	.+682    	; 0x3dc <speedSensor_getDriver>
 132:	90 93 19 02 	sts	0x0219, r25	; 0x800219 <__data_end+0x1>
 136:	80 93 18 02 	sts	0x0218, r24	; 0x800218 <__data_end>
 13a:	0e e4       	ldi	r16, 0x4E	; 78
 13c:	28 e0       	ldi	r18, 0x08	; 8
 13e:	40 e8       	ldi	r20, 0x80	; 128
 140:	55 e2       	ldi	r21, 0x25	; 37
 142:	60 e0       	ldi	r22, 0x00	; 0
 144:	70 e0       	ldi	r23, 0x00	; 0
 146:	80 ec       	ldi	r24, 0xC0	; 192
 148:	90 e0       	ldi	r25, 0x00	; 0
 14a:	a2 d1       	rcall	.+836    	; 0x490 <InitUART>
 14c:	ce e1       	ldi	r28, 0x1E	; 30
 14e:	d2 e0       	ldi	r29, 0x02	; 2
 150:	e0 91 18 02 	lds	r30, 0x0218	; 0x800218 <__data_end>
 154:	f0 91 19 02 	lds	r31, 0x0219	; 0x800219 <__data_end+0x1>
 158:	00 84       	ldd	r0, Z+8	; 0x08
 15a:	f1 85       	ldd	r31, Z+9	; 0x09
 15c:	e0 2d       	mov	r30, r0
 15e:	19 95       	eicall
 160:	f9 d2       	rcall	.+1522   	; 0x754 <__fixunssfsi>
 162:	60 93 1e 02 	sts	0x021E, r22	; 0x80021e <kmTotal>
 166:	70 93 1f 02 	sts	0x021F, r23	; 0x80021f <kmTotal+0x1>
 16a:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <kmTotal+0x2>
 16e:	90 93 21 02 	sts	0x0221, r25	; 0x800221 <kmTotal+0x3>
 172:	2d 98       	cbi	0x05, 5	; 5
 174:	60 e0       	ldi	r22, 0x00	; 0
 176:	72 e0       	ldi	r23, 0x02	; 2
 178:	80 ec       	ldi	r24, 0xC0	; 192
 17a:	90 e0       	ldi	r25, 0x00	; 0
 17c:	e2 d1       	rcall	.+964    	; 0x542 <SendString>
 17e:	e0 91 18 02 	lds	r30, 0x0218	; 0x800218 <__data_end>
 182:	f0 91 19 02 	lds	r31, 0x0219	; 0x800219 <__data_end+0x1>
 186:	06 80       	ldd	r0, Z+6	; 0x06
 188:	f7 81       	ldd	r31, Z+7	; 0x07
 18a:	e0 2d       	mov	r30, r0
 18c:	19 95       	eicall
 18e:	4b 01       	movw	r8, r22
 190:	5c 01       	movw	r10, r24
 192:	db d2       	rcall	.+1462   	; 0x74a <__fixsfsi>
 194:	6b 01       	movw	r12, r22
 196:	7c 01       	movw	r14, r24
 198:	80 ec       	ldi	r24, 0xC0	; 192
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	e6 d1       	rcall	.+972    	; 0x56a <SendInteger>
 19e:	6e e2       	ldi	r22, 0x2E	; 46
 1a0:	80 ec       	ldi	r24, 0xC0	; 192
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	c8 d1       	rcall	.+912    	; 0x536 <SendChar>
 1a6:	b6 01       	movw	r22, r12
 1a8:	dd 0c       	add	r13, r13
 1aa:	88 0b       	sbc	r24, r24
 1ac:	99 0b       	sbc	r25, r25
 1ae:	00 d3       	rcall	.+1536   	; 0x7b0 <__floatsisf>
 1b0:	9b 01       	movw	r18, r22
 1b2:	ac 01       	movw	r20, r24
 1b4:	c5 01       	movw	r24, r10
 1b6:	b4 01       	movw	r22, r8
 1b8:	fb d1       	rcall	.+1014   	; 0x5b0 <__subsf3>
 1ba:	20 e0       	ldi	r18, 0x00	; 0
 1bc:	30 e0       	ldi	r19, 0x00	; 0
 1be:	48 ec       	ldi	r20, 0xC8	; 200
 1c0:	52 e4       	ldi	r21, 0x42	; 66
 1c2:	82 d3       	rcall	.+1796   	; 0x8c8 <__mulsf3>
 1c4:	c2 d2       	rcall	.+1412   	; 0x74a <__fixsfsi>
 1c6:	80 ec       	ldi	r24, 0xC0	; 192
 1c8:	90 e0       	ldi	r25, 0x00	; 0
 1ca:	cf d1       	rcall	.+926    	; 0x56a <SendInteger>
 1cc:	66 e0       	ldi	r22, 0x06	; 6
 1ce:	72 e0       	ldi	r23, 0x02	; 2
 1d0:	80 ec       	ldi	r24, 0xC0	; 192
 1d2:	90 e0       	ldi	r25, 0x00	; 0
 1d4:	b6 d1       	rcall	.+876    	; 0x542 <SendString>
 1d6:	68 81       	ld	r22, Y
 1d8:	79 81       	ldd	r23, Y+1	; 0x01
 1da:	80 ec       	ldi	r24, 0xC0	; 192
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	c5 d1       	rcall	.+906    	; 0x56a <SendInteger>
 1e0:	6d e0       	ldi	r22, 0x0D	; 13
 1e2:	80 ec       	ldi	r24, 0xC0	; 192
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	a7 d1       	rcall	.+846    	; 0x536 <SendChar>
 1e8:	b3 cf       	rjmp	.-154    	; 0x150 <main+0x2c>

000001ea <__vector_5>:
 1ea:	1f 92       	push	r1
 1ec:	0f 92       	push	r0
 1ee:	0f b6       	in	r0, 0x3f	; 63
 1f0:	0f 92       	push	r0
 1f2:	11 24       	eor	r1, r1
 1f4:	0b b6       	in	r0, 0x3b	; 59
 1f6:	0f 92       	push	r0
 1f8:	2f 93       	push	r18
 1fa:	3f 93       	push	r19
 1fc:	4f 93       	push	r20
 1fe:	5f 93       	push	r21
 200:	6f 93       	push	r22
 202:	7f 93       	push	r23
 204:	8f 93       	push	r24
 206:	9f 93       	push	r25
 208:	af 93       	push	r26
 20a:	bf 93       	push	r27
 20c:	ef 93       	push	r30
 20e:	ff 93       	push	r31
 210:	e0 91 18 02 	lds	r30, 0x0218	; 0x800218 <__data_end>
 214:	f0 91 19 02 	lds	r31, 0x0219	; 0x800219 <__data_end+0x1>
 218:	02 80       	ldd	r0, Z+2	; 0x02
 21a:	f3 81       	ldd	r31, Z+3	; 0x03
 21c:	e0 2d       	mov	r30, r0
 21e:	19 95       	eicall
 220:	80 91 1a 02 	lds	r24, 0x021A	; 0x80021a <revolutionsForCalc>
 224:	8f 5f       	subi	r24, 0xFF	; 255
 226:	80 93 1a 02 	sts	0x021A, r24	; 0x80021a <revolutionsForCalc>
 22a:	ff 91       	pop	r31
 22c:	ef 91       	pop	r30
 22e:	bf 91       	pop	r27
 230:	af 91       	pop	r26
 232:	9f 91       	pop	r25
 234:	8f 91       	pop	r24
 236:	7f 91       	pop	r23
 238:	6f 91       	pop	r22
 23a:	5f 91       	pop	r21
 23c:	4f 91       	pop	r20
 23e:	3f 91       	pop	r19
 240:	2f 91       	pop	r18
 242:	0f 90       	pop	r0
 244:	0b be       	out	0x3b, r0	; 59
 246:	0f 90       	pop	r0
 248:	0f be       	out	0x3f, r0	; 63
 24a:	0f 90       	pop	r0
 24c:	1f 90       	pop	r1
 24e:	18 95       	reti

00000250 <__vector_15>:
 250:	1f 92       	push	r1
 252:	0f 92       	push	r0
 254:	0f b6       	in	r0, 0x3f	; 63
 256:	0f 92       	push	r0
 258:	11 24       	eor	r1, r1
 25a:	0b b6       	in	r0, 0x3b	; 59
 25c:	0f 92       	push	r0
 25e:	2f 93       	push	r18
 260:	3f 93       	push	r19
 262:	4f 93       	push	r20
 264:	5f 93       	push	r21
 266:	6f 93       	push	r22
 268:	7f 93       	push	r23
 26a:	8f 93       	push	r24
 26c:	9f 93       	push	r25
 26e:	af 93       	push	r26
 270:	bf 93       	push	r27
 272:	ef 93       	push	r30
 274:	ff 93       	push	r31
 276:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <timerOverflows>
 27a:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <timerOverflows+0x1>
 27e:	01 96       	adiw	r24, 0x01	; 1
 280:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <timerOverflows+0x1>
 284:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <timerOverflows>
 288:	84 32       	cpi	r24, 0x24	; 36
 28a:	94 4f       	sbci	r25, 0xF4	; 244
 28c:	b1 f4       	brne	.+44     	; 0x2ba <__vector_15+0x6a>
 28e:	10 92 1d 02 	sts	0x021D, r1	; 0x80021d <timerOverflows+0x1>
 292:	10 92 1c 02 	sts	0x021C, r1	; 0x80021c <timerOverflows>
 296:	2d 9a       	sbi	0x05, 5	; 5
 298:	e0 91 18 02 	lds	r30, 0x0218	; 0x800218 <__data_end>
 29c:	f0 91 19 02 	lds	r31, 0x0219	; 0x800219 <__data_end+0x1>
 2a0:	01 90       	ld	r0, Z+
 2a2:	f0 81       	ld	r31, Z
 2a4:	e0 2d       	mov	r30, r0
 2a6:	80 91 1a 02 	lds	r24, 0x021A	; 0x80021a <revolutionsForCalc>
 2aa:	19 95       	eicall
 2ac:	10 92 1a 02 	sts	0x021A, r1	; 0x80021a <revolutionsForCalc>
 2b0:	80 91 1b 02 	lds	r24, 0x021B	; 0x80021b <checkpointCnt>
 2b4:	8f 5f       	subi	r24, 0xFF	; 255
 2b6:	80 93 1b 02 	sts	0x021B, r24	; 0x80021b <checkpointCnt>
 2ba:	80 91 1b 02 	lds	r24, 0x021B	; 0x80021b <checkpointCnt>
 2be:	8d 33       	cpi	r24, 0x3D	; 61
 2c0:	50 f0       	brcs	.+20     	; 0x2d6 <__vector_15+0x86>
 2c2:	10 92 1b 02 	sts	0x021B, r1	; 0x80021b <checkpointCnt>
 2c6:	e0 91 18 02 	lds	r30, 0x0218	; 0x800218 <__data_end>
 2ca:	f0 91 19 02 	lds	r31, 0x0219	; 0x800219 <__data_end+0x1>
 2ce:	04 80       	ldd	r0, Z+4	; 0x04
 2d0:	f5 81       	ldd	r31, Z+5	; 0x05
 2d2:	e0 2d       	mov	r30, r0
 2d4:	19 95       	eicall
 2d6:	ff 91       	pop	r31
 2d8:	ef 91       	pop	r30
 2da:	bf 91       	pop	r27
 2dc:	af 91       	pop	r26
 2de:	9f 91       	pop	r25
 2e0:	8f 91       	pop	r24
 2e2:	7f 91       	pop	r23
 2e4:	6f 91       	pop	r22
 2e6:	5f 91       	pop	r21
 2e8:	4f 91       	pop	r20
 2ea:	3f 91       	pop	r19
 2ec:	2f 91       	pop	r18
 2ee:	0f 90       	pop	r0
 2f0:	0b be       	out	0x3b, r0	; 59
 2f2:	0f 90       	pop	r0
 2f4:	0f be       	out	0x3f, r0	; 63
 2f6:	0f 90       	pop	r0
 2f8:	1f 90       	pop	r1
 2fa:	18 95       	reti

000002fc <getTripDistance>:
}

static float getTripDistance(void)  //WORKS TESTED 
{ 
	float KMD = ((revLength*milestoneCount)/1000); //Total KM distance driven
	return KMD;
 2fc:	60 91 32 02 	lds	r22, 0x0232	; 0x800232 <milestoneCount>
 300:	70 91 33 02 	lds	r23, 0x0233	; 0x800233 <milestoneCount+0x1>
 304:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <milestoneCount+0x2>
 308:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <milestoneCount+0x3>
 30c:	4f d2       	rcall	.+1182   	; 0x7ac <__floatunsisf>
 30e:	20 91 23 02 	lds	r18, 0x0223	; 0x800223 <revLength>
 312:	30 91 24 02 	lds	r19, 0x0224	; 0x800224 <revLength+0x1>
 316:	40 91 25 02 	lds	r20, 0x0225	; 0x800225 <revLength+0x2>
 31a:	50 91 26 02 	lds	r21, 0x0226	; 0x800226 <revLength+0x3>
 31e:	d4 d2       	rcall	.+1448   	; 0x8c8 <__mulsf3>
 320:	20 e0       	ldi	r18, 0x00	; 0
 322:	30 e0       	ldi	r19, 0x00	; 0
 324:	4a e7       	ldi	r20, 0x7A	; 122
 326:	54 e4       	ldi	r21, 0x44	; 68
 328:	a8 c1       	rjmp	.+848    	; 0x67a <__divsf3>
}
 32a:	08 95       	ret

0000032c <updateMilestoneCount>:

static void updateMilestoneCount()
{
	milestoneCount += 1;
 32c:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <milestoneCount>
 330:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <milestoneCount+0x1>
 334:	a0 91 34 02 	lds	r26, 0x0234	; 0x800234 <milestoneCount+0x2>
 338:	b0 91 35 02 	lds	r27, 0x0235	; 0x800235 <milestoneCount+0x3>
 33c:	01 96       	adiw	r24, 0x01	; 1
 33e:	a1 1d       	adc	r26, r1
 340:	b1 1d       	adc	r27, r1
 342:	80 93 32 02 	sts	0x0232, r24	; 0x800232 <milestoneCount>
 346:	90 93 33 02 	sts	0x0233, r25	; 0x800233 <milestoneCount+0x1>
 34a:	a0 93 34 02 	sts	0x0234, r26	; 0x800234 <milestoneCount+0x2>
 34e:	b0 93 35 02 	sts	0x0235, r27	; 0x800235 <milestoneCount+0x3>
 352:	08 95       	ret

00000354 <updateRevolutionCount>:
}

static void updateRevolutionCount(uint8_t revs)
{
	static uint8_t cnt = 0;
	revPerSec[cnt] = revs;
 354:	20 91 22 02 	lds	r18, 0x0222	; 0x800222 <cnt.1904>
 358:	30 e0       	ldi	r19, 0x00	; 0
 35a:	f9 01       	movw	r30, r18
 35c:	ea 5c       	subi	r30, 0xCA	; 202
 35e:	fd 4f       	sbci	r31, 0xFD	; 253
 360:	80 83       	st	Z, r24
	cnt = (cnt+1) % 4;
 362:	c9 01       	movw	r24, r18
 364:	01 96       	adiw	r24, 0x01	; 1
 366:	83 70       	andi	r24, 0x03	; 3
 368:	90 78       	andi	r25, 0x80	; 128
 36a:	99 23       	and	r25, r25
 36c:	24 f4       	brge	.+8      	; 0x376 <updateRevolutionCount+0x22>
 36e:	01 97       	sbiw	r24, 0x01	; 1
 370:	8c 6f       	ori	r24, 0xFC	; 252
 372:	9f 6f       	ori	r25, 0xFF	; 255
 374:	01 96       	adiw	r24, 0x01	; 1
 376:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <cnt.1904>
 37a:	08 95       	ret

0000037c <getSpeedKMH>:
{
	uint16_t retVal = 0;
	uint8_t i = 0;
	for (i = 0; i<4; i++)
	{
		retVal += revPerSec[i];
 37c:	e6 e3       	ldi	r30, 0x36	; 54
 37e:	f2 e0       	ldi	r31, 0x02	; 2
 380:	80 81       	ld	r24, Z
 382:	61 81       	ldd	r22, Z+1	; 0x01
 384:	70 e0       	ldi	r23, 0x00	; 0
 386:	68 0f       	add	r22, r24
 388:	71 1d       	adc	r23, r1
 38a:	82 81       	ldd	r24, Z+2	; 0x02
 38c:	68 0f       	add	r22, r24
 38e:	71 1d       	adc	r23, r1
{
	//char buffer[10];
	
	float KMH = ((float)sumRevolutions()/4)*revLength*3.6; // Revolutions per second times revolution length = m/s. time 3.6 = km/h
	
	return KMH; 
 390:	83 81       	ldd	r24, Z+3	; 0x03
 392:	68 0f       	add	r22, r24
 394:	71 1d       	adc	r23, r1
 396:	80 e0       	ldi	r24, 0x00	; 0
 398:	90 e0       	ldi	r25, 0x00	; 0
 39a:	08 d2       	rcall	.+1040   	; 0x7ac <__floatunsisf>
 39c:	20 e0       	ldi	r18, 0x00	; 0
 39e:	30 e0       	ldi	r19, 0x00	; 0
 3a0:	40 e8       	ldi	r20, 0x80	; 128
 3a2:	5e e3       	ldi	r21, 0x3E	; 62
 3a4:	91 d2       	rcall	.+1314   	; 0x8c8 <__mulsf3>
 3a6:	20 91 23 02 	lds	r18, 0x0223	; 0x800223 <revLength>
 3aa:	30 91 24 02 	lds	r19, 0x0224	; 0x800224 <revLength+0x1>
 3ae:	40 91 25 02 	lds	r20, 0x0225	; 0x800225 <revLength+0x2>
 3b2:	50 91 26 02 	lds	r21, 0x0226	; 0x800226 <revLength+0x3>
 3b6:	88 d2       	rcall	.+1296   	; 0x8c8 <__mulsf3>
 3b8:	26 e6       	ldi	r18, 0x66	; 102
 3ba:	36 e6       	ldi	r19, 0x66	; 102
 3bc:	46 e6       	ldi	r20, 0x66	; 102
 3be:	50 e4       	ldi	r21, 0x40	; 64
 3c0:	83 c2       	rjmp	.+1286   	; 0x8c8 <__mulsf3>
}
 3c2:	08 95       	ret

000003c4 <eepromSave>:
}


static void eepromSave(void)
{
	eeprom_write_dword(0,milestoneCount);
 3c4:	40 91 32 02 	lds	r20, 0x0232	; 0x800232 <milestoneCount>
 3c8:	50 91 33 02 	lds	r21, 0x0233	; 0x800233 <milestoneCount+0x1>
 3cc:	60 91 34 02 	lds	r22, 0x0234	; 0x800234 <milestoneCount+0x2>
 3d0:	70 91 35 02 	lds	r23, 0x0235	; 0x800235 <milestoneCount+0x3>
 3d4:	80 e0       	ldi	r24, 0x00	; 0
 3d6:	90 e0       	ldi	r25, 0x00	; 0
 3d8:	34 c3       	rjmp	.+1640   	; 0xa42 <eeprom_write_dword>
 3da:	08 95       	ret

000003dc <speedSensor_getDriver>:
static float getSpeedKMH(void);
static float getTripDistance(void);

speedSensorInterface_t* speedSensor_getDriver(float wheelDiameter)
{
	if (!initialized)
 3dc:	20 91 27 02 	lds	r18, 0x0227	; 0x800227 <initialized>
 3e0:	21 11       	cpse	r18, r1
 3e2:	53 c0       	rjmp	.+166    	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
}

static void initSpeedSensor(float wheelDiameter)
{
	float wheelD=(wheelDiameter/200); //Calculations to meters centered ( /100 & /2)
	revLength=(wheelD*3.1415); //One revolution gives meters
 3e4:	20 e0       	ldi	r18, 0x00	; 0
 3e6:	30 e0       	ldi	r19, 0x00	; 0
 3e8:	48 e4       	ldi	r20, 0x48	; 72
 3ea:	53 e4       	ldi	r21, 0x43	; 67
 3ec:	46 d1       	rcall	.+652    	; 0x67a <__divsf3>
 3ee:	26 e5       	ldi	r18, 0x56	; 86
 3f0:	3e e0       	ldi	r19, 0x0E	; 14
 3f2:	49 e4       	ldi	r20, 0x49	; 73
 3f4:	50 e4       	ldi	r21, 0x40	; 64
 3f6:	68 d2       	rcall	.+1232   	; 0x8c8 <__mulsf3>
 3f8:	60 93 23 02 	sts	0x0223, r22	; 0x800223 <revLength>
 3fc:	70 93 24 02 	sts	0x0224, r23	; 0x800224 <revLength+0x1>
 400:	80 93 25 02 	sts	0x0225, r24	; 0x800225 <revLength+0x2>
 404:	90 93 26 02 	sts	0x0226, r25	; 0x800226 <revLength+0x3>
	milestoneCount = eeprom_read_dword(0);
 408:	80 e0       	ldi	r24, 0x00	; 0
 40a:	90 e0       	ldi	r25, 0x00	; 0
 40c:	15 d3       	rcall	.+1578   	; 0xa38 <eeprom_read_dword>
	if (milestoneCount == 0xFFFFFFFF)
 40e:	6f 3f       	cpi	r22, 0xFF	; 255
 410:	2f ef       	ldi	r18, 0xFF	; 255
 412:	72 07       	cpc	r23, r18
 414:	82 07       	cpc	r24, r18
 416:	92 07       	cpc	r25, r18
 418:	49 f0       	breq	.+18     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>

static void initSpeedSensor(float wheelDiameter)
{
	float wheelD=(wheelDiameter/200); //Calculations to meters centered ( /100 & /2)
	revLength=(wheelD*3.1415); //One revolution gives meters
	milestoneCount = eeprom_read_dword(0);
 41a:	60 93 32 02 	sts	0x0232, r22	; 0x800232 <milestoneCount>
 41e:	70 93 33 02 	sts	0x0233, r23	; 0x800233 <milestoneCount+0x1>
 422:	80 93 34 02 	sts	0x0234, r24	; 0x800234 <milestoneCount+0x2>
 426:	90 93 35 02 	sts	0x0235, r25	; 0x800235 <milestoneCount+0x3>
 42a:	08 c0       	rjmp	.+16     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
	if (milestoneCount == 0xFFFFFFFF)
	{
		milestoneCount = 0;
 42c:	10 92 32 02 	sts	0x0232, r1	; 0x800232 <milestoneCount>
 430:	10 92 33 02 	sts	0x0233, r1	; 0x800233 <milestoneCount+0x1>
 434:	10 92 34 02 	sts	0x0234, r1	; 0x800234 <milestoneCount+0x2>
 438:	10 92 35 02 	sts	0x0235, r1	; 0x800235 <milestoneCount+0x3>
	}
	//Timer2 is used for keeping time of rpm measurement.
	// Timer2: Normal mode, No prescaling
	TCCR2A = 0b00000000;
 43c:	10 92 b0 00 	sts	0x00B0, r1	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>
	TCCR2B = 0b00000001;
 440:	91 e0       	ldi	r25, 0x01	; 1
 442:	90 93 b1 00 	sts	0x00B1, r25	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7000b1>
	// Timer2 overflow interrupt enable
	TIMSK2 |= 0b00000001;
 446:	e0 e7       	ldi	r30, 0x70	; 112
 448:	f0 e0       	ldi	r31, 0x00	; 0
 44a:	80 81       	ld	r24, Z
 44c:	81 60       	ori	r24, 0x01	; 1
 44e:	80 83       	st	Z, r24
	
	// INT3:Rising edge
	EICRA = 0b11000000;
 450:	80 ec       	ldi	r24, 0xC0	; 192
 452:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x700069>
	// Enable extern interrupts INT3 
	EIMSK |= 0b00001000;
 456:	eb 9a       	sbi	0x1d, 3	; 29
	
	// Global interrupt enable
	sei();
 458:	78 94       	sei
speedSensorInterface_t* speedSensor_getDriver(float wheelDiameter)
{
	if (!initialized)
	{
		initSpeedSensor(wheelDiameter);
		myInterface.getSpeedInKmh = getSpeedKMH;
 45a:	e8 e2       	ldi	r30, 0x28	; 40
 45c:	f2 e0       	ldi	r31, 0x02	; 2
 45e:	2e eb       	ldi	r18, 0xBE	; 190
 460:	31 e0       	ldi	r19, 0x01	; 1
 462:	37 83       	std	Z+7, r19	; 0x07
 464:	26 83       	std	Z+6, r18	; 0x06
		myInterface.getTripDistance = getTripDistance;
 466:	2e e7       	ldi	r18, 0x7E	; 126
 468:	31 e0       	ldi	r19, 0x01	; 1
 46a:	31 87       	std	Z+9, r19	; 0x09
 46c:	20 87       	std	Z+8, r18	; 0x08
		myInterface.saveMilestoneCount = eepromSave;
 46e:	22 ee       	ldi	r18, 0xE2	; 226
 470:	31 e0       	ldi	r19, 0x01	; 1
 472:	35 83       	std	Z+5, r19	; 0x05
 474:	24 83       	std	Z+4, r18	; 0x04
		myInterface.updateMilestoneCount = updateMilestoneCount;
 476:	26 e9       	ldi	r18, 0x96	; 150
 478:	31 e0       	ldi	r19, 0x01	; 1
 47a:	33 83       	std	Z+3, r19	; 0x03
 47c:	22 83       	std	Z+2, r18	; 0x02
		myInterface.updateRevolutionCount = updateRevolutionCount;
 47e:	2a ea       	ldi	r18, 0xAA	; 170
 480:	31 e0       	ldi	r19, 0x01	; 1
 482:	31 83       	std	Z+1, r19	; 0x01
 484:	20 83       	st	Z, r18
		initialized = true;
 486:	90 93 27 02 	sts	0x0227, r25	; 0x800227 <initialized>
	}
	return &myInterface;
}
 48a:	88 e2       	ldi	r24, 0x28	; 40
 48c:	92 e0       	ldi	r25, 0x02	; 2
 48e:	08 95       	ret

00000490 <InitUART>:
 490:	0f 93       	push	r16
 492:	cf 93       	push	r28
 494:	df 93       	push	r29
 496:	ec 01       	movw	r28, r24
 498:	db 01       	movw	r26, r22
 49a:	ca 01       	movw	r24, r20
 49c:	8c 52       	subi	r24, 0x2C	; 44
 49e:	91 40       	sbci	r25, 0x01	; 1
 4a0:	a1 09       	sbc	r26, r1
 4a2:	b1 09       	sbc	r27, r1
 4a4:	85 3d       	cpi	r24, 0xD5	; 213
 4a6:	90 4c       	sbci	r25, 0xC0	; 192
 4a8:	a1 40       	sbci	r26, 0x01	; 1
 4aa:	b1 05       	cpc	r27, r1
 4ac:	08 f0       	brcs	.+2      	; 0x4b0 <InitUART+0x20>
 4ae:	3f c0       	rjmp	.+126    	; 0x52e <InitUART+0x9e>
 4b0:	25 50       	subi	r18, 0x05	; 5
 4b2:	24 30       	cpi	r18, 0x04	; 4
 4b4:	e0 f5       	brcc	.+120    	; 0x52e <InitUART+0x9e>
 4b6:	80 e2       	ldi	r24, 0x20	; 32
 4b8:	88 83       	st	Y, r24
 4ba:	88 e1       	ldi	r24, 0x18	; 24
 4bc:	89 83       	std	Y+1, r24	; 0x01
 4be:	22 0f       	add	r18, r18
 4c0:	2a 83       	std	Y+2, r18	; 0x02
 4c2:	05 34       	cpi	r16, 0x45	; 69
 4c4:	21 f4       	brne	.+8      	; 0x4ce <InitUART+0x3e>
 4c6:	8a 81       	ldd	r24, Y+2	; 0x02
 4c8:	80 62       	ori	r24, 0x20	; 32
 4ca:	8a 83       	std	Y+2, r24	; 0x02
 4cc:	05 c0       	rjmp	.+10     	; 0x4d8 <InitUART+0x48>
 4ce:	0f 34       	cpi	r16, 0x4F	; 79
 4d0:	19 f4       	brne	.+6      	; 0x4d8 <InitUART+0x48>
 4d2:	8a 81       	ldd	r24, Y+2	; 0x02
 4d4:	80 63       	ori	r24, 0x30	; 48
 4d6:	8a 83       	std	Y+2, r24	; 0x02
 4d8:	db 01       	movw	r26, r22
 4da:	ca 01       	movw	r24, r20
 4dc:	80 58       	subi	r24, 0x80	; 128
 4de:	9b 47       	sbci	r25, 0x7B	; 123
 4e0:	a1 4e       	sbci	r26, 0xE1	; 225
 4e2:	bf 4f       	sbci	r27, 0xFF	; 255
 4e4:	88 0f       	add	r24, r24
 4e6:	99 1f       	adc	r25, r25
 4e8:	aa 1f       	adc	r26, r26
 4ea:	bb 1f       	adc	r27, r27
 4ec:	88 0f       	add	r24, r24
 4ee:	99 1f       	adc	r25, r25
 4f0:	aa 1f       	adc	r26, r26
 4f2:	bb 1f       	adc	r27, r27
 4f4:	88 0f       	add	r24, r24
 4f6:	99 1f       	adc	r25, r25
 4f8:	aa 1f       	adc	r26, r26
 4fa:	bb 1f       	adc	r27, r27
 4fc:	44 0f       	add	r20, r20
 4fe:	55 1f       	adc	r21, r21
 500:	66 1f       	adc	r22, r22
 502:	77 1f       	adc	r23, r23
 504:	44 0f       	add	r20, r20
 506:	55 1f       	adc	r21, r21
 508:	66 1f       	adc	r22, r22
 50a:	77 1f       	adc	r23, r23
 50c:	9a 01       	movw	r18, r20
 50e:	ab 01       	movw	r20, r22
 510:	22 0f       	add	r18, r18
 512:	33 1f       	adc	r19, r19
 514:	44 1f       	adc	r20, r20
 516:	55 1f       	adc	r21, r21
 518:	22 0f       	add	r18, r18
 51a:	33 1f       	adc	r19, r19
 51c:	44 1f       	adc	r20, r20
 51e:	55 1f       	adc	r21, r21
 520:	bc 01       	movw	r22, r24
 522:	cd 01       	movw	r24, r26
 524:	34 d2       	rcall	.+1128   	; 0x98e <__udivmodsi4>
 526:	21 50       	subi	r18, 0x01	; 1
 528:	31 09       	sbc	r19, r1
 52a:	3d 83       	std	Y+5, r19	; 0x05
 52c:	2c 83       	std	Y+4, r18	; 0x04
 52e:	df 91       	pop	r29
 530:	cf 91       	pop	r28
 532:	0f 91       	pop	r16
 534:	08 95       	ret

00000536 <SendChar>:
 536:	fc 01       	movw	r30, r24
 538:	90 81       	ld	r25, Z
 53a:	95 ff       	sbrs	r25, 5
 53c:	fd cf       	rjmp	.-6      	; 0x538 <SendChar+0x2>
 53e:	66 83       	std	Z+6, r22	; 0x06
 540:	08 95       	ret

00000542 <SendString>:
 542:	0f 93       	push	r16
 544:	1f 93       	push	r17
 546:	cf 93       	push	r28
 548:	df 93       	push	r29
 54a:	eb 01       	movw	r28, r22
 54c:	68 81       	ld	r22, Y
 54e:	66 23       	and	r22, r22
 550:	39 f0       	breq	.+14     	; 0x560 <SendString+0x1e>
 552:	8c 01       	movw	r16, r24
 554:	21 96       	adiw	r28, 0x01	; 1
 556:	c8 01       	movw	r24, r16
 558:	ee df       	rcall	.-36     	; 0x536 <SendChar>
 55a:	69 91       	ld	r22, Y+
 55c:	61 11       	cpse	r22, r1
 55e:	fb cf       	rjmp	.-10     	; 0x556 <SendString+0x14>
 560:	df 91       	pop	r29
 562:	cf 91       	pop	r28
 564:	1f 91       	pop	r17
 566:	0f 91       	pop	r16
 568:	08 95       	ret

0000056a <SendInteger>:
 56a:	0f 93       	push	r16
 56c:	1f 93       	push	r17
 56e:	cf 93       	push	r28
 570:	df 93       	push	r29
 572:	cd b7       	in	r28, 0x3d	; 61
 574:	de b7       	in	r29, 0x3e	; 62
 576:	27 97       	sbiw	r28, 0x07	; 7
 578:	0f b6       	in	r0, 0x3f	; 63
 57a:	f8 94       	cli
 57c:	de bf       	out	0x3e, r29	; 62
 57e:	0f be       	out	0x3f, r0	; 63
 580:	cd bf       	out	0x3d, r28	; 61
 582:	8c 01       	movw	r16, r24
 584:	cb 01       	movw	r24, r22
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 586:	4a e0       	ldi	r20, 0x0A	; 10
 588:	be 01       	movw	r22, r28
 58a:	6f 5f       	subi	r22, 0xFF	; 255
 58c:	7f 4f       	sbci	r23, 0xFF	; 255
 58e:	21 d2       	rcall	.+1090   	; 0x9d2 <__itoa_ncheck>
 590:	be 01       	movw	r22, r28
 592:	6f 5f       	subi	r22, 0xFF	; 255
 594:	7f 4f       	sbci	r23, 0xFF	; 255
 596:	c8 01       	movw	r24, r16
 598:	d4 df       	rcall	.-88     	; 0x542 <SendString>
 59a:	27 96       	adiw	r28, 0x07	; 7
 59c:	0f b6       	in	r0, 0x3f	; 63
 59e:	f8 94       	cli
 5a0:	de bf       	out	0x3e, r29	; 62
 5a2:	0f be       	out	0x3f, r0	; 63
 5a4:	cd bf       	out	0x3d, r28	; 61
 5a6:	df 91       	pop	r29
 5a8:	cf 91       	pop	r28
 5aa:	1f 91       	pop	r17
 5ac:	0f 91       	pop	r16
 5ae:	08 95       	ret

000005b0 <__subsf3>:
 5b0:	50 58       	subi	r21, 0x80	; 128

000005b2 <__addsf3>:
 5b2:	bb 27       	eor	r27, r27
 5b4:	aa 27       	eor	r26, r26
 5b6:	0e d0       	rcall	.+28     	; 0x5d4 <__addsf3x>
 5b8:	4d c1       	rjmp	.+666    	; 0x854 <__fp_round>
 5ba:	3e d1       	rcall	.+636    	; 0x838 <__fp_pscA>
 5bc:	30 f0       	brcs	.+12     	; 0x5ca <__addsf3+0x18>
 5be:	43 d1       	rcall	.+646    	; 0x846 <__fp_pscB>
 5c0:	20 f0       	brcs	.+8      	; 0x5ca <__addsf3+0x18>
 5c2:	31 f4       	brne	.+12     	; 0x5d0 <__addsf3+0x1e>
 5c4:	9f 3f       	cpi	r25, 0xFF	; 255
 5c6:	11 f4       	brne	.+4      	; 0x5cc <__addsf3+0x1a>
 5c8:	1e f4       	brtc	.+6      	; 0x5d0 <__addsf3+0x1e>
 5ca:	33 c1       	rjmp	.+614    	; 0x832 <__fp_nan>
 5cc:	0e f4       	brtc	.+2      	; 0x5d0 <__addsf3+0x1e>
 5ce:	e0 95       	com	r30
 5d0:	e7 fb       	bst	r30, 7
 5d2:	29 c1       	rjmp	.+594    	; 0x826 <__fp_inf>

000005d4 <__addsf3x>:
 5d4:	e9 2f       	mov	r30, r25
 5d6:	4f d1       	rcall	.+670    	; 0x876 <__fp_split3>
 5d8:	80 f3       	brcs	.-32     	; 0x5ba <__addsf3+0x8>
 5da:	ba 17       	cp	r27, r26
 5dc:	62 07       	cpc	r22, r18
 5de:	73 07       	cpc	r23, r19
 5e0:	84 07       	cpc	r24, r20
 5e2:	95 07       	cpc	r25, r21
 5e4:	18 f0       	brcs	.+6      	; 0x5ec <__addsf3x+0x18>
 5e6:	71 f4       	brne	.+28     	; 0x604 <__addsf3x+0x30>
 5e8:	9e f5       	brtc	.+102    	; 0x650 <__addsf3x+0x7c>
 5ea:	67 c1       	rjmp	.+718    	; 0x8ba <__fp_zero>
 5ec:	0e f4       	brtc	.+2      	; 0x5f0 <__addsf3x+0x1c>
 5ee:	e0 95       	com	r30
 5f0:	0b 2e       	mov	r0, r27
 5f2:	ba 2f       	mov	r27, r26
 5f4:	a0 2d       	mov	r26, r0
 5f6:	0b 01       	movw	r0, r22
 5f8:	b9 01       	movw	r22, r18
 5fa:	90 01       	movw	r18, r0
 5fc:	0c 01       	movw	r0, r24
 5fe:	ca 01       	movw	r24, r20
 600:	a0 01       	movw	r20, r0
 602:	11 24       	eor	r1, r1
 604:	ff 27       	eor	r31, r31
 606:	59 1b       	sub	r21, r25
 608:	99 f0       	breq	.+38     	; 0x630 <__addsf3x+0x5c>
 60a:	59 3f       	cpi	r21, 0xF9	; 249
 60c:	50 f4       	brcc	.+20     	; 0x622 <__addsf3x+0x4e>
 60e:	50 3e       	cpi	r21, 0xE0	; 224
 610:	68 f1       	brcs	.+90     	; 0x66c <__addsf3x+0x98>
 612:	1a 16       	cp	r1, r26
 614:	f0 40       	sbci	r31, 0x00	; 0
 616:	a2 2f       	mov	r26, r18
 618:	23 2f       	mov	r18, r19
 61a:	34 2f       	mov	r19, r20
 61c:	44 27       	eor	r20, r20
 61e:	58 5f       	subi	r21, 0xF8	; 248
 620:	f3 cf       	rjmp	.-26     	; 0x608 <__addsf3x+0x34>
 622:	46 95       	lsr	r20
 624:	37 95       	ror	r19
 626:	27 95       	ror	r18
 628:	a7 95       	ror	r26
 62a:	f0 40       	sbci	r31, 0x00	; 0
 62c:	53 95       	inc	r21
 62e:	c9 f7       	brne	.-14     	; 0x622 <__addsf3x+0x4e>
 630:	7e f4       	brtc	.+30     	; 0x650 <__addsf3x+0x7c>
 632:	1f 16       	cp	r1, r31
 634:	ba 0b       	sbc	r27, r26
 636:	62 0b       	sbc	r22, r18
 638:	73 0b       	sbc	r23, r19
 63a:	84 0b       	sbc	r24, r20
 63c:	ba f0       	brmi	.+46     	; 0x66c <__addsf3x+0x98>
 63e:	91 50       	subi	r25, 0x01	; 1
 640:	a1 f0       	breq	.+40     	; 0x66a <__addsf3x+0x96>
 642:	ff 0f       	add	r31, r31
 644:	bb 1f       	adc	r27, r27
 646:	66 1f       	adc	r22, r22
 648:	77 1f       	adc	r23, r23
 64a:	88 1f       	adc	r24, r24
 64c:	c2 f7       	brpl	.-16     	; 0x63e <__addsf3x+0x6a>
 64e:	0e c0       	rjmp	.+28     	; 0x66c <__addsf3x+0x98>
 650:	ba 0f       	add	r27, r26
 652:	62 1f       	adc	r22, r18
 654:	73 1f       	adc	r23, r19
 656:	84 1f       	adc	r24, r20
 658:	48 f4       	brcc	.+18     	; 0x66c <__addsf3x+0x98>
 65a:	87 95       	ror	r24
 65c:	77 95       	ror	r23
 65e:	67 95       	ror	r22
 660:	b7 95       	ror	r27
 662:	f7 95       	ror	r31
 664:	9e 3f       	cpi	r25, 0xFE	; 254
 666:	08 f0       	brcs	.+2      	; 0x66a <__addsf3x+0x96>
 668:	b3 cf       	rjmp	.-154    	; 0x5d0 <__addsf3+0x1e>
 66a:	93 95       	inc	r25
 66c:	88 0f       	add	r24, r24
 66e:	08 f0       	brcs	.+2      	; 0x672 <__addsf3x+0x9e>
 670:	99 27       	eor	r25, r25
 672:	ee 0f       	add	r30, r30
 674:	97 95       	ror	r25
 676:	87 95       	ror	r24
 678:	08 95       	ret

0000067a <__divsf3>:
 67a:	0c d0       	rcall	.+24     	; 0x694 <__divsf3x>
 67c:	eb c0       	rjmp	.+470    	; 0x854 <__fp_round>
 67e:	e3 d0       	rcall	.+454    	; 0x846 <__fp_pscB>
 680:	40 f0       	brcs	.+16     	; 0x692 <__divsf3+0x18>
 682:	da d0       	rcall	.+436    	; 0x838 <__fp_pscA>
 684:	30 f0       	brcs	.+12     	; 0x692 <__divsf3+0x18>
 686:	21 f4       	brne	.+8      	; 0x690 <__divsf3+0x16>
 688:	5f 3f       	cpi	r21, 0xFF	; 255
 68a:	19 f0       	breq	.+6      	; 0x692 <__divsf3+0x18>
 68c:	cc c0       	rjmp	.+408    	; 0x826 <__fp_inf>
 68e:	51 11       	cpse	r21, r1
 690:	15 c1       	rjmp	.+554    	; 0x8bc <__fp_szero>
 692:	cf c0       	rjmp	.+414    	; 0x832 <__fp_nan>

00000694 <__divsf3x>:
 694:	f0 d0       	rcall	.+480    	; 0x876 <__fp_split3>
 696:	98 f3       	brcs	.-26     	; 0x67e <__divsf3+0x4>

00000698 <__divsf3_pse>:
 698:	99 23       	and	r25, r25
 69a:	c9 f3       	breq	.-14     	; 0x68e <__divsf3+0x14>
 69c:	55 23       	and	r21, r21
 69e:	b1 f3       	breq	.-20     	; 0x68c <__divsf3+0x12>
 6a0:	95 1b       	sub	r25, r21
 6a2:	55 0b       	sbc	r21, r21
 6a4:	bb 27       	eor	r27, r27
 6a6:	aa 27       	eor	r26, r26
 6a8:	62 17       	cp	r22, r18
 6aa:	73 07       	cpc	r23, r19
 6ac:	84 07       	cpc	r24, r20
 6ae:	38 f0       	brcs	.+14     	; 0x6be <__divsf3_pse+0x26>
 6b0:	9f 5f       	subi	r25, 0xFF	; 255
 6b2:	5f 4f       	sbci	r21, 0xFF	; 255
 6b4:	22 0f       	add	r18, r18
 6b6:	33 1f       	adc	r19, r19
 6b8:	44 1f       	adc	r20, r20
 6ba:	aa 1f       	adc	r26, r26
 6bc:	a9 f3       	breq	.-22     	; 0x6a8 <__divsf3_pse+0x10>
 6be:	33 d0       	rcall	.+102    	; 0x726 <__divsf3_pse+0x8e>
 6c0:	0e 2e       	mov	r0, r30
 6c2:	3a f0       	brmi	.+14     	; 0x6d2 <__divsf3_pse+0x3a>
 6c4:	e0 e8       	ldi	r30, 0x80	; 128
 6c6:	30 d0       	rcall	.+96     	; 0x728 <__divsf3_pse+0x90>
 6c8:	91 50       	subi	r25, 0x01	; 1
 6ca:	50 40       	sbci	r21, 0x00	; 0
 6cc:	e6 95       	lsr	r30
 6ce:	00 1c       	adc	r0, r0
 6d0:	ca f7       	brpl	.-14     	; 0x6c4 <__divsf3_pse+0x2c>
 6d2:	29 d0       	rcall	.+82     	; 0x726 <__divsf3_pse+0x8e>
 6d4:	fe 2f       	mov	r31, r30
 6d6:	27 d0       	rcall	.+78     	; 0x726 <__divsf3_pse+0x8e>
 6d8:	66 0f       	add	r22, r22
 6da:	77 1f       	adc	r23, r23
 6dc:	88 1f       	adc	r24, r24
 6de:	bb 1f       	adc	r27, r27
 6e0:	26 17       	cp	r18, r22
 6e2:	37 07       	cpc	r19, r23
 6e4:	48 07       	cpc	r20, r24
 6e6:	ab 07       	cpc	r26, r27
 6e8:	b0 e8       	ldi	r27, 0x80	; 128
 6ea:	09 f0       	breq	.+2      	; 0x6ee <__divsf3_pse+0x56>
 6ec:	bb 0b       	sbc	r27, r27
 6ee:	80 2d       	mov	r24, r0
 6f0:	bf 01       	movw	r22, r30
 6f2:	ff 27       	eor	r31, r31
 6f4:	93 58       	subi	r25, 0x83	; 131
 6f6:	5f 4f       	sbci	r21, 0xFF	; 255
 6f8:	2a f0       	brmi	.+10     	; 0x704 <__divsf3_pse+0x6c>
 6fa:	9e 3f       	cpi	r25, 0xFE	; 254
 6fc:	51 05       	cpc	r21, r1
 6fe:	68 f0       	brcs	.+26     	; 0x71a <__divsf3_pse+0x82>
 700:	92 c0       	rjmp	.+292    	; 0x826 <__fp_inf>
 702:	dc c0       	rjmp	.+440    	; 0x8bc <__fp_szero>
 704:	5f 3f       	cpi	r21, 0xFF	; 255
 706:	ec f3       	brlt	.-6      	; 0x702 <__divsf3_pse+0x6a>
 708:	98 3e       	cpi	r25, 0xE8	; 232
 70a:	dc f3       	brlt	.-10     	; 0x702 <__divsf3_pse+0x6a>
 70c:	86 95       	lsr	r24
 70e:	77 95       	ror	r23
 710:	67 95       	ror	r22
 712:	b7 95       	ror	r27
 714:	f7 95       	ror	r31
 716:	9f 5f       	subi	r25, 0xFF	; 255
 718:	c9 f7       	brne	.-14     	; 0x70c <__divsf3_pse+0x74>
 71a:	88 0f       	add	r24, r24
 71c:	91 1d       	adc	r25, r1
 71e:	96 95       	lsr	r25
 720:	87 95       	ror	r24
 722:	97 f9       	bld	r25, 7
 724:	08 95       	ret
 726:	e1 e0       	ldi	r30, 0x01	; 1
 728:	66 0f       	add	r22, r22
 72a:	77 1f       	adc	r23, r23
 72c:	88 1f       	adc	r24, r24
 72e:	bb 1f       	adc	r27, r27
 730:	62 17       	cp	r22, r18
 732:	73 07       	cpc	r23, r19
 734:	84 07       	cpc	r24, r20
 736:	ba 07       	cpc	r27, r26
 738:	20 f0       	brcs	.+8      	; 0x742 <__divsf3_pse+0xaa>
 73a:	62 1b       	sub	r22, r18
 73c:	73 0b       	sbc	r23, r19
 73e:	84 0b       	sbc	r24, r20
 740:	ba 0b       	sbc	r27, r26
 742:	ee 1f       	adc	r30, r30
 744:	88 f7       	brcc	.-30     	; 0x728 <__divsf3_pse+0x90>
 746:	e0 95       	com	r30
 748:	08 95       	ret

0000074a <__fixsfsi>:
 74a:	04 d0       	rcall	.+8      	; 0x754 <__fixunssfsi>
 74c:	68 94       	set
 74e:	b1 11       	cpse	r27, r1
 750:	b5 c0       	rjmp	.+362    	; 0x8bc <__fp_szero>
 752:	08 95       	ret

00000754 <__fixunssfsi>:
 754:	98 d0       	rcall	.+304    	; 0x886 <__fp_splitA>
 756:	88 f0       	brcs	.+34     	; 0x77a <__fixunssfsi+0x26>
 758:	9f 57       	subi	r25, 0x7F	; 127
 75a:	90 f0       	brcs	.+36     	; 0x780 <__fixunssfsi+0x2c>
 75c:	b9 2f       	mov	r27, r25
 75e:	99 27       	eor	r25, r25
 760:	b7 51       	subi	r27, 0x17	; 23
 762:	a0 f0       	brcs	.+40     	; 0x78c <__fixunssfsi+0x38>
 764:	d1 f0       	breq	.+52     	; 0x79a <__fixunssfsi+0x46>
 766:	66 0f       	add	r22, r22
 768:	77 1f       	adc	r23, r23
 76a:	88 1f       	adc	r24, r24
 76c:	99 1f       	adc	r25, r25
 76e:	1a f0       	brmi	.+6      	; 0x776 <__fixunssfsi+0x22>
 770:	ba 95       	dec	r27
 772:	c9 f7       	brne	.-14     	; 0x766 <__fixunssfsi+0x12>
 774:	12 c0       	rjmp	.+36     	; 0x79a <__fixunssfsi+0x46>
 776:	b1 30       	cpi	r27, 0x01	; 1
 778:	81 f0       	breq	.+32     	; 0x79a <__fixunssfsi+0x46>
 77a:	9f d0       	rcall	.+318    	; 0x8ba <__fp_zero>
 77c:	b1 e0       	ldi	r27, 0x01	; 1
 77e:	08 95       	ret
 780:	9c c0       	rjmp	.+312    	; 0x8ba <__fp_zero>
 782:	67 2f       	mov	r22, r23
 784:	78 2f       	mov	r23, r24
 786:	88 27       	eor	r24, r24
 788:	b8 5f       	subi	r27, 0xF8	; 248
 78a:	39 f0       	breq	.+14     	; 0x79a <__fixunssfsi+0x46>
 78c:	b9 3f       	cpi	r27, 0xF9	; 249
 78e:	cc f3       	brlt	.-14     	; 0x782 <__fixunssfsi+0x2e>
 790:	86 95       	lsr	r24
 792:	77 95       	ror	r23
 794:	67 95       	ror	r22
 796:	b3 95       	inc	r27
 798:	d9 f7       	brne	.-10     	; 0x790 <__fixunssfsi+0x3c>
 79a:	3e f4       	brtc	.+14     	; 0x7aa <__fixunssfsi+0x56>
 79c:	90 95       	com	r25
 79e:	80 95       	com	r24
 7a0:	70 95       	com	r23
 7a2:	61 95       	neg	r22
 7a4:	7f 4f       	sbci	r23, 0xFF	; 255
 7a6:	8f 4f       	sbci	r24, 0xFF	; 255
 7a8:	9f 4f       	sbci	r25, 0xFF	; 255
 7aa:	08 95       	ret

000007ac <__floatunsisf>:
 7ac:	e8 94       	clt
 7ae:	09 c0       	rjmp	.+18     	; 0x7c2 <__floatsisf+0x12>

000007b0 <__floatsisf>:
 7b0:	97 fb       	bst	r25, 7
 7b2:	3e f4       	brtc	.+14     	; 0x7c2 <__floatsisf+0x12>
 7b4:	90 95       	com	r25
 7b6:	80 95       	com	r24
 7b8:	70 95       	com	r23
 7ba:	61 95       	neg	r22
 7bc:	7f 4f       	sbci	r23, 0xFF	; 255
 7be:	8f 4f       	sbci	r24, 0xFF	; 255
 7c0:	9f 4f       	sbci	r25, 0xFF	; 255
 7c2:	99 23       	and	r25, r25
 7c4:	a9 f0       	breq	.+42     	; 0x7f0 <__floatsisf+0x40>
 7c6:	f9 2f       	mov	r31, r25
 7c8:	96 e9       	ldi	r25, 0x96	; 150
 7ca:	bb 27       	eor	r27, r27
 7cc:	93 95       	inc	r25
 7ce:	f6 95       	lsr	r31
 7d0:	87 95       	ror	r24
 7d2:	77 95       	ror	r23
 7d4:	67 95       	ror	r22
 7d6:	b7 95       	ror	r27
 7d8:	f1 11       	cpse	r31, r1
 7da:	f8 cf       	rjmp	.-16     	; 0x7cc <__floatsisf+0x1c>
 7dc:	fa f4       	brpl	.+62     	; 0x81c <__floatsisf+0x6c>
 7de:	bb 0f       	add	r27, r27
 7e0:	11 f4       	brne	.+4      	; 0x7e6 <__floatsisf+0x36>
 7e2:	60 ff       	sbrs	r22, 0
 7e4:	1b c0       	rjmp	.+54     	; 0x81c <__floatsisf+0x6c>
 7e6:	6f 5f       	subi	r22, 0xFF	; 255
 7e8:	7f 4f       	sbci	r23, 0xFF	; 255
 7ea:	8f 4f       	sbci	r24, 0xFF	; 255
 7ec:	9f 4f       	sbci	r25, 0xFF	; 255
 7ee:	16 c0       	rjmp	.+44     	; 0x81c <__floatsisf+0x6c>
 7f0:	88 23       	and	r24, r24
 7f2:	11 f0       	breq	.+4      	; 0x7f8 <__floatsisf+0x48>
 7f4:	96 e9       	ldi	r25, 0x96	; 150
 7f6:	11 c0       	rjmp	.+34     	; 0x81a <__floatsisf+0x6a>
 7f8:	77 23       	and	r23, r23
 7fa:	21 f0       	breq	.+8      	; 0x804 <__floatsisf+0x54>
 7fc:	9e e8       	ldi	r25, 0x8E	; 142
 7fe:	87 2f       	mov	r24, r23
 800:	76 2f       	mov	r23, r22
 802:	05 c0       	rjmp	.+10     	; 0x80e <__floatsisf+0x5e>
 804:	66 23       	and	r22, r22
 806:	71 f0       	breq	.+28     	; 0x824 <__floatsisf+0x74>
 808:	96 e8       	ldi	r25, 0x86	; 134
 80a:	86 2f       	mov	r24, r22
 80c:	70 e0       	ldi	r23, 0x00	; 0
 80e:	60 e0       	ldi	r22, 0x00	; 0
 810:	2a f0       	brmi	.+10     	; 0x81c <__floatsisf+0x6c>
 812:	9a 95       	dec	r25
 814:	66 0f       	add	r22, r22
 816:	77 1f       	adc	r23, r23
 818:	88 1f       	adc	r24, r24
 81a:	da f7       	brpl	.-10     	; 0x812 <__floatsisf+0x62>
 81c:	88 0f       	add	r24, r24
 81e:	96 95       	lsr	r25
 820:	87 95       	ror	r24
 822:	97 f9       	bld	r25, 7
 824:	08 95       	ret

00000826 <__fp_inf>:
 826:	97 f9       	bld	r25, 7
 828:	9f 67       	ori	r25, 0x7F	; 127
 82a:	80 e8       	ldi	r24, 0x80	; 128
 82c:	70 e0       	ldi	r23, 0x00	; 0
 82e:	60 e0       	ldi	r22, 0x00	; 0
 830:	08 95       	ret

00000832 <__fp_nan>:
 832:	9f ef       	ldi	r25, 0xFF	; 255
 834:	80 ec       	ldi	r24, 0xC0	; 192
 836:	08 95       	ret

00000838 <__fp_pscA>:
 838:	00 24       	eor	r0, r0
 83a:	0a 94       	dec	r0
 83c:	16 16       	cp	r1, r22
 83e:	17 06       	cpc	r1, r23
 840:	18 06       	cpc	r1, r24
 842:	09 06       	cpc	r0, r25
 844:	08 95       	ret

00000846 <__fp_pscB>:
 846:	00 24       	eor	r0, r0
 848:	0a 94       	dec	r0
 84a:	12 16       	cp	r1, r18
 84c:	13 06       	cpc	r1, r19
 84e:	14 06       	cpc	r1, r20
 850:	05 06       	cpc	r0, r21
 852:	08 95       	ret

00000854 <__fp_round>:
 854:	09 2e       	mov	r0, r25
 856:	03 94       	inc	r0
 858:	00 0c       	add	r0, r0
 85a:	11 f4       	brne	.+4      	; 0x860 <__fp_round+0xc>
 85c:	88 23       	and	r24, r24
 85e:	52 f0       	brmi	.+20     	; 0x874 <__fp_round+0x20>
 860:	bb 0f       	add	r27, r27
 862:	40 f4       	brcc	.+16     	; 0x874 <__fp_round+0x20>
 864:	bf 2b       	or	r27, r31
 866:	11 f4       	brne	.+4      	; 0x86c <__fp_round+0x18>
 868:	60 ff       	sbrs	r22, 0
 86a:	04 c0       	rjmp	.+8      	; 0x874 <__fp_round+0x20>
 86c:	6f 5f       	subi	r22, 0xFF	; 255
 86e:	7f 4f       	sbci	r23, 0xFF	; 255
 870:	8f 4f       	sbci	r24, 0xFF	; 255
 872:	9f 4f       	sbci	r25, 0xFF	; 255
 874:	08 95       	ret

00000876 <__fp_split3>:
 876:	57 fd       	sbrc	r21, 7
 878:	90 58       	subi	r25, 0x80	; 128
 87a:	44 0f       	add	r20, r20
 87c:	55 1f       	adc	r21, r21
 87e:	59 f0       	breq	.+22     	; 0x896 <__fp_splitA+0x10>
 880:	5f 3f       	cpi	r21, 0xFF	; 255
 882:	71 f0       	breq	.+28     	; 0x8a0 <__fp_splitA+0x1a>
 884:	47 95       	ror	r20

00000886 <__fp_splitA>:
 886:	88 0f       	add	r24, r24
 888:	97 fb       	bst	r25, 7
 88a:	99 1f       	adc	r25, r25
 88c:	61 f0       	breq	.+24     	; 0x8a6 <__fp_splitA+0x20>
 88e:	9f 3f       	cpi	r25, 0xFF	; 255
 890:	79 f0       	breq	.+30     	; 0x8b0 <__fp_splitA+0x2a>
 892:	87 95       	ror	r24
 894:	08 95       	ret
 896:	12 16       	cp	r1, r18
 898:	13 06       	cpc	r1, r19
 89a:	14 06       	cpc	r1, r20
 89c:	55 1f       	adc	r21, r21
 89e:	f2 cf       	rjmp	.-28     	; 0x884 <__fp_split3+0xe>
 8a0:	46 95       	lsr	r20
 8a2:	f1 df       	rcall	.-30     	; 0x886 <__fp_splitA>
 8a4:	08 c0       	rjmp	.+16     	; 0x8b6 <__fp_splitA+0x30>
 8a6:	16 16       	cp	r1, r22
 8a8:	17 06       	cpc	r1, r23
 8aa:	18 06       	cpc	r1, r24
 8ac:	99 1f       	adc	r25, r25
 8ae:	f1 cf       	rjmp	.-30     	; 0x892 <__fp_splitA+0xc>
 8b0:	86 95       	lsr	r24
 8b2:	71 05       	cpc	r23, r1
 8b4:	61 05       	cpc	r22, r1
 8b6:	08 94       	sec
 8b8:	08 95       	ret

000008ba <__fp_zero>:
 8ba:	e8 94       	clt

000008bc <__fp_szero>:
 8bc:	bb 27       	eor	r27, r27
 8be:	66 27       	eor	r22, r22
 8c0:	77 27       	eor	r23, r23
 8c2:	cb 01       	movw	r24, r22
 8c4:	97 f9       	bld	r25, 7
 8c6:	08 95       	ret

000008c8 <__mulsf3>:
 8c8:	0b d0       	rcall	.+22     	; 0x8e0 <__mulsf3x>
 8ca:	c4 cf       	rjmp	.-120    	; 0x854 <__fp_round>
 8cc:	b5 df       	rcall	.-150    	; 0x838 <__fp_pscA>
 8ce:	28 f0       	brcs	.+10     	; 0x8da <__mulsf3+0x12>
 8d0:	ba df       	rcall	.-140    	; 0x846 <__fp_pscB>
 8d2:	18 f0       	brcs	.+6      	; 0x8da <__mulsf3+0x12>
 8d4:	95 23       	and	r25, r21
 8d6:	09 f0       	breq	.+2      	; 0x8da <__mulsf3+0x12>
 8d8:	a6 cf       	rjmp	.-180    	; 0x826 <__fp_inf>
 8da:	ab cf       	rjmp	.-170    	; 0x832 <__fp_nan>
 8dc:	11 24       	eor	r1, r1
 8de:	ee cf       	rjmp	.-36     	; 0x8bc <__fp_szero>

000008e0 <__mulsf3x>:
 8e0:	ca df       	rcall	.-108    	; 0x876 <__fp_split3>
 8e2:	a0 f3       	brcs	.-24     	; 0x8cc <__mulsf3+0x4>

000008e4 <__mulsf3_pse>:
 8e4:	95 9f       	mul	r25, r21
 8e6:	d1 f3       	breq	.-12     	; 0x8dc <__mulsf3+0x14>
 8e8:	95 0f       	add	r25, r21
 8ea:	50 e0       	ldi	r21, 0x00	; 0
 8ec:	55 1f       	adc	r21, r21
 8ee:	62 9f       	mul	r22, r18
 8f0:	f0 01       	movw	r30, r0
 8f2:	72 9f       	mul	r23, r18
 8f4:	bb 27       	eor	r27, r27
 8f6:	f0 0d       	add	r31, r0
 8f8:	b1 1d       	adc	r27, r1
 8fa:	63 9f       	mul	r22, r19
 8fc:	aa 27       	eor	r26, r26
 8fe:	f0 0d       	add	r31, r0
 900:	b1 1d       	adc	r27, r1
 902:	aa 1f       	adc	r26, r26
 904:	64 9f       	mul	r22, r20
 906:	66 27       	eor	r22, r22
 908:	b0 0d       	add	r27, r0
 90a:	a1 1d       	adc	r26, r1
 90c:	66 1f       	adc	r22, r22
 90e:	82 9f       	mul	r24, r18
 910:	22 27       	eor	r18, r18
 912:	b0 0d       	add	r27, r0
 914:	a1 1d       	adc	r26, r1
 916:	62 1f       	adc	r22, r18
 918:	73 9f       	mul	r23, r19
 91a:	b0 0d       	add	r27, r0
 91c:	a1 1d       	adc	r26, r1
 91e:	62 1f       	adc	r22, r18
 920:	83 9f       	mul	r24, r19
 922:	a0 0d       	add	r26, r0
 924:	61 1d       	adc	r22, r1
 926:	22 1f       	adc	r18, r18
 928:	74 9f       	mul	r23, r20
 92a:	33 27       	eor	r19, r19
 92c:	a0 0d       	add	r26, r0
 92e:	61 1d       	adc	r22, r1
 930:	23 1f       	adc	r18, r19
 932:	84 9f       	mul	r24, r20
 934:	60 0d       	add	r22, r0
 936:	21 1d       	adc	r18, r1
 938:	82 2f       	mov	r24, r18
 93a:	76 2f       	mov	r23, r22
 93c:	6a 2f       	mov	r22, r26
 93e:	11 24       	eor	r1, r1
 940:	9f 57       	subi	r25, 0x7F	; 127
 942:	50 40       	sbci	r21, 0x00	; 0
 944:	8a f0       	brmi	.+34     	; 0x968 <__mulsf3_pse+0x84>
 946:	e1 f0       	breq	.+56     	; 0x980 <__mulsf3_pse+0x9c>
 948:	88 23       	and	r24, r24
 94a:	4a f0       	brmi	.+18     	; 0x95e <__mulsf3_pse+0x7a>
 94c:	ee 0f       	add	r30, r30
 94e:	ff 1f       	adc	r31, r31
 950:	bb 1f       	adc	r27, r27
 952:	66 1f       	adc	r22, r22
 954:	77 1f       	adc	r23, r23
 956:	88 1f       	adc	r24, r24
 958:	91 50       	subi	r25, 0x01	; 1
 95a:	50 40       	sbci	r21, 0x00	; 0
 95c:	a9 f7       	brne	.-22     	; 0x948 <__mulsf3_pse+0x64>
 95e:	9e 3f       	cpi	r25, 0xFE	; 254
 960:	51 05       	cpc	r21, r1
 962:	70 f0       	brcs	.+28     	; 0x980 <__mulsf3_pse+0x9c>
 964:	60 cf       	rjmp	.-320    	; 0x826 <__fp_inf>
 966:	aa cf       	rjmp	.-172    	; 0x8bc <__fp_szero>
 968:	5f 3f       	cpi	r21, 0xFF	; 255
 96a:	ec f3       	brlt	.-6      	; 0x966 <__mulsf3_pse+0x82>
 96c:	98 3e       	cpi	r25, 0xE8	; 232
 96e:	dc f3       	brlt	.-10     	; 0x966 <__mulsf3_pse+0x82>
 970:	86 95       	lsr	r24
 972:	77 95       	ror	r23
 974:	67 95       	ror	r22
 976:	b7 95       	ror	r27
 978:	f7 95       	ror	r31
 97a:	e7 95       	ror	r30
 97c:	9f 5f       	subi	r25, 0xFF	; 255
 97e:	c1 f7       	brne	.-16     	; 0x970 <__mulsf3_pse+0x8c>
 980:	fe 2b       	or	r31, r30
 982:	88 0f       	add	r24, r24
 984:	91 1d       	adc	r25, r1
 986:	96 95       	lsr	r25
 988:	87 95       	ror	r24
 98a:	97 f9       	bld	r25, 7
 98c:	08 95       	ret

0000098e <__udivmodsi4>:
 98e:	a1 e2       	ldi	r26, 0x21	; 33
 990:	1a 2e       	mov	r1, r26
 992:	aa 1b       	sub	r26, r26
 994:	bb 1b       	sub	r27, r27
 996:	fd 01       	movw	r30, r26
 998:	0d c0       	rjmp	.+26     	; 0x9b4 <__udivmodsi4_ep>

0000099a <__udivmodsi4_loop>:
 99a:	aa 1f       	adc	r26, r26
 99c:	bb 1f       	adc	r27, r27
 99e:	ee 1f       	adc	r30, r30
 9a0:	ff 1f       	adc	r31, r31
 9a2:	a2 17       	cp	r26, r18
 9a4:	b3 07       	cpc	r27, r19
 9a6:	e4 07       	cpc	r30, r20
 9a8:	f5 07       	cpc	r31, r21
 9aa:	20 f0       	brcs	.+8      	; 0x9b4 <__udivmodsi4_ep>
 9ac:	a2 1b       	sub	r26, r18
 9ae:	b3 0b       	sbc	r27, r19
 9b0:	e4 0b       	sbc	r30, r20
 9b2:	f5 0b       	sbc	r31, r21

000009b4 <__udivmodsi4_ep>:
 9b4:	66 1f       	adc	r22, r22
 9b6:	77 1f       	adc	r23, r23
 9b8:	88 1f       	adc	r24, r24
 9ba:	99 1f       	adc	r25, r25
 9bc:	1a 94       	dec	r1
 9be:	69 f7       	brne	.-38     	; 0x99a <__udivmodsi4_loop>
 9c0:	60 95       	com	r22
 9c2:	70 95       	com	r23
 9c4:	80 95       	com	r24
 9c6:	90 95       	com	r25
 9c8:	9b 01       	movw	r18, r22
 9ca:	ac 01       	movw	r20, r24
 9cc:	bd 01       	movw	r22, r26
 9ce:	cf 01       	movw	r24, r30
 9d0:	08 95       	ret

000009d2 <__itoa_ncheck>:
 9d2:	bb 27       	eor	r27, r27
 9d4:	4a 30       	cpi	r20, 0x0A	; 10
 9d6:	31 f4       	brne	.+12     	; 0x9e4 <__itoa_ncheck+0x12>
 9d8:	99 23       	and	r25, r25
 9da:	22 f4       	brpl	.+8      	; 0x9e4 <__itoa_ncheck+0x12>
 9dc:	bd e2       	ldi	r27, 0x2D	; 45
 9de:	90 95       	com	r25
 9e0:	81 95       	neg	r24
 9e2:	9f 4f       	sbci	r25, 0xFF	; 255
 9e4:	01 c0       	rjmp	.+2      	; 0x9e8 <__utoa_common>

000009e6 <__utoa_ncheck>:
 9e6:	bb 27       	eor	r27, r27

000009e8 <__utoa_common>:
 9e8:	fb 01       	movw	r30, r22
 9ea:	55 27       	eor	r21, r21
 9ec:	aa 27       	eor	r26, r26
 9ee:	88 0f       	add	r24, r24
 9f0:	99 1f       	adc	r25, r25
 9f2:	aa 1f       	adc	r26, r26
 9f4:	a4 17       	cp	r26, r20
 9f6:	10 f0       	brcs	.+4      	; 0x9fc <__utoa_common+0x14>
 9f8:	a4 1b       	sub	r26, r20
 9fa:	83 95       	inc	r24
 9fc:	50 51       	subi	r21, 0x10	; 16
 9fe:	b9 f7       	brne	.-18     	; 0x9ee <__utoa_common+0x6>
 a00:	a0 5d       	subi	r26, 0xD0	; 208
 a02:	aa 33       	cpi	r26, 0x3A	; 58
 a04:	08 f0       	brcs	.+2      	; 0xa08 <__utoa_common+0x20>
 a06:	a9 5d       	subi	r26, 0xD9	; 217
 a08:	a1 93       	st	Z+, r26
 a0a:	00 97       	sbiw	r24, 0x00	; 0
 a0c:	79 f7       	brne	.-34     	; 0x9ec <__utoa_common+0x4>
 a0e:	b1 11       	cpse	r27, r1
 a10:	b1 93       	st	Z+, r27
 a12:	11 92       	st	Z+, r1
 a14:	cb 01       	movw	r24, r22
 a16:	00 c0       	rjmp	.+0      	; 0xa18 <strrev>

00000a18 <strrev>:
 a18:	dc 01       	movw	r26, r24
 a1a:	fc 01       	movw	r30, r24
 a1c:	67 2f       	mov	r22, r23
 a1e:	71 91       	ld	r23, Z+
 a20:	77 23       	and	r23, r23
 a22:	e1 f7       	brne	.-8      	; 0xa1c <strrev+0x4>
 a24:	32 97       	sbiw	r30, 0x02	; 2
 a26:	04 c0       	rjmp	.+8      	; 0xa30 <strrev+0x18>
 a28:	7c 91       	ld	r23, X
 a2a:	6d 93       	st	X+, r22
 a2c:	70 83       	st	Z, r23
 a2e:	62 91       	ld	r22, -Z
 a30:	ae 17       	cp	r26, r30
 a32:	bf 07       	cpc	r27, r31
 a34:	c8 f3       	brcs	.-14     	; 0xa28 <strrev+0x10>
 a36:	08 95       	ret

00000a38 <eeprom_read_dword>:
 a38:	a6 e1       	ldi	r26, 0x16	; 22
 a3a:	b0 e0       	ldi	r27, 0x00	; 0
 a3c:	44 e0       	ldi	r20, 0x04	; 4
 a3e:	50 e0       	ldi	r21, 0x00	; 0
 a40:	0a c0       	rjmp	.+20     	; 0xa56 <eeprom_read_blraw>

00000a42 <eeprom_write_dword>:
 a42:	24 2f       	mov	r18, r20
 a44:	17 d0       	rcall	.+46     	; 0xa74 <eeprom_write_r18>
 a46:	25 2f       	mov	r18, r21
 a48:	15 d0       	rcall	.+42     	; 0xa74 <eeprom_write_r18>
 a4a:	00 c0       	rjmp	.+0      	; 0xa4c <eeprom_write_word>

00000a4c <eeprom_write_word>:
 a4c:	12 d0       	rcall	.+36     	; 0xa72 <eeprom_write_byte>
 a4e:	27 2f       	mov	r18, r23
 a50:	11 c0       	rjmp	.+34     	; 0xa74 <eeprom_write_r18>

00000a52 <eeprom_read_block>:
 a52:	dc 01       	movw	r26, r24
 a54:	cb 01       	movw	r24, r22

00000a56 <eeprom_read_blraw>:
 a56:	fc 01       	movw	r30, r24
 a58:	f9 99       	sbic	0x1f, 1	; 31
 a5a:	fe cf       	rjmp	.-4      	; 0xa58 <eeprom_read_blraw+0x2>
 a5c:	06 c0       	rjmp	.+12     	; 0xa6a <eeprom_read_blraw+0x14>
 a5e:	f2 bd       	out	0x22, r31	; 34
 a60:	e1 bd       	out	0x21, r30	; 33
 a62:	f8 9a       	sbi	0x1f, 0	; 31
 a64:	31 96       	adiw	r30, 0x01	; 1
 a66:	00 b4       	in	r0, 0x20	; 32
 a68:	0d 92       	st	X+, r0
 a6a:	41 50       	subi	r20, 0x01	; 1
 a6c:	50 40       	sbci	r21, 0x00	; 0
 a6e:	b8 f7       	brcc	.-18     	; 0xa5e <eeprom_read_blraw+0x8>
 a70:	08 95       	ret

00000a72 <eeprom_write_byte>:
 a72:	26 2f       	mov	r18, r22

00000a74 <eeprom_write_r18>:
 a74:	f9 99       	sbic	0x1f, 1	; 31
 a76:	fe cf       	rjmp	.-4      	; 0xa74 <eeprom_write_r18>
 a78:	1f ba       	out	0x1f, r1	; 31
 a7a:	92 bd       	out	0x22, r25	; 34
 a7c:	81 bd       	out	0x21, r24	; 33
 a7e:	20 bd       	out	0x20, r18	; 32
 a80:	0f b6       	in	r0, 0x3f	; 63
 a82:	f8 94       	cli
 a84:	fa 9a       	sbi	0x1f, 2	; 31
 a86:	f9 9a       	sbi	0x1f, 1	; 31
 a88:	0f be       	out	0x3f, r0	; 63
 a8a:	01 96       	adiw	r24, 0x01	; 1
 a8c:	08 95       	ret

00000a8e <_exit>:
 a8e:	f8 94       	cli

00000a90 <__stop_program>:
 a90:	ff cf       	rjmp	.-2      	; 0xa90 <__stop_program>
